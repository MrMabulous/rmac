# requirements() returns an array(ref) of structs.
#
# "type" can be "perlmodule" or "executable".
#
# The "version" of Perl modules (if any) is interpreted as
# *minimum* required version.
# Within "package" you can give package names for different distributions.
# The keys can be something like 'debian' or 'debian_9'. 


sub requirements { [
    {
	type    => "perlmodule",
	name    => "DBI",
	package => { debian => "libdbi-perl" }
    },

    {
	type=>    "perlmodule",
	name=>    "DBD::Pg",
	package=> { debian => "libdbd-pg-perl" }
    },

    {
	type    => "perlmodule",
	name    => "DBIx::Simple",
	package => { debian => "libdbix-simple-perl" }
    },

    {
	type=>    "perlmodule",
	name=>    "Date::Parse",
	package=> { debian => "libtimedate-perl" }
    },

    {
	type    => "perlmodule",
	name    => "GD::Graph",
	package => { debian => "libgd-graph-perl" }
    },

    {
	type    => "perlmodule",
	name    => "CGI::FormBuilder",
	package => { debian => "libcgi-formbuilder-perl" }
    },

    {
	type    => "perlmodule",
	name    => "DBIx::XHTML_Table",
    },

    {
	type    => "executable",
	name    => "zip",
	package => { debian => "zip" }
    },

    {
	type    => "executable",
	name    => "pg_dump",
	package => { debian => "postgresql-client" }
    },

    {
	type    => "executable",
	name    => "latex",
	package => { debian=> "texlive" }
    },
    
    {
	type    => "executable",
	name    => "pdftk",
	package => { debian => "pdftk" }
    }
]}
